/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.24
 * Generated at: 2024-05-19 16:07:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class AdminAfterLogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/Top.jsp", Long.valueOf(1715789748076L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html>\n");
      out.write("    <style>\n");
      out.write("        .tabtheme{\n");
      out.write("        width:100%;\n");
      out.write("        height:40px;\n");
      out.write("        font-family:arial;\n");
      out.write("        font-weight:bold;\n");
      out.write("        font-size: 25px;\n");
      out.write("        color:white;\n");
      out.write("        text-align:center;\n");
      out.write("        margin-top:40px;\n");
      out.write("        border-radius:30px;\n");
      out.write("        background-color:rgba(122,69,85,0.5);\n");
      out.write("        }\n");
      out.write("        body{\n");
      out.write("         \n");
      out.write("            background-size: 100%;\n");
      out.write("            background-position: center;\n");
      out.write("            width: 100%;\n");
      out.write("            font-size: 18px;\n");
      out.write("            }\n");
      out.write("            .hometheme{\n");
      out.write("                \n");
      out.write("                background-color:white;\n");
      out.write("                color:black;\n");
      out.write("                border-radius:40px;\n");
      out.write("                \n");
      out.write("                \n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .coltheme:hover{\n");
      out.write("                background-color:white;\n");
      out.write("                color:black;\n");
      out.write("                border-radius:40px;\n");
      out.write("                \n");
      out.write("            }\n");
      out.write("    </style>\n");
      out.write("       <body background = \"blur-coffee.webp\">\n");
      out.write("        <div style=\" width:100% ;height:150px;margin-top: 30px;font-size: 15px\" >\n");
      out.write("        <table border=\"0\" class=\"tabtheme\" align=\"centre\">\n");
      out.write("            <tr align=\"center\">\n");
      out.write("                <td class=\"hometheme\">HOME</td>\n");
      out.write("                <td class=\"coltheme\">ABOUT</td>\n");
      out.write("                <td class=\"coltheme\">CONTACT</td> \n");
      out.write("                <td class=\"coltheme\">QUERY</td>  \n");
      out.write("                <td class=\"coltheme\"><a href=\"SessionDestroy.jsp\">logout</a></td>  \n");
      out.write("            </tr>\n");
      out.write("        </table>\n");
      out.write("     </div>\n");
      out.write("    </body>\n");
      out.write("  </html>");
      out.write("\n");
      out.write("<html>\n");
      out.write("    <style>\n");
      out.write("            .formeles{\n");
      out.write("                color:black;\n");
      out.write("                background-color: whitesmoke;\n");
      out.write("                font-size: 20px;\n");
      out.write("            }\n");
      out.write("       \n");
      out.write("    </style>\n");
      out.write("<!-- <table border = '0' style =\"text-align:center; color:white;  \n");
      out.write("        border-radius:20px ; margin-top:-30px;border:inset\" align='left' cellspacing='20-->\n");
      out.write("        <div >\n");
      out.write("        <form >\n");
      out.write("        <table border = '4' style =\"text-align:center; color:black;\n");
      out.write("         border-radius:10px ; margin-top:-30px;border:inset\" align='left' cellspacing='10'>\n");
      out.write("\n");
      out.write("             <tr>\n");
      out.write("                <td class=\"formeles\"><a href=\"addOrder.jsp\">ADD ORDER</a></td>\n");
      out.write("            </tr>\n");
      out.write("            \n");
      out.write("             <tr>\n");
      out.write("                <td class=\"formeles\"><a href=\"ManageClientPage.jsp\">ORDER HISTORY</a></td>\n");
      out.write("            </tr>\n");
      out.write("            \n");
      out.write("           <tr>\n");
      out.write("                <td class=\"formeles\"><a href=\"addProduct.jsp\">ADD/REMOVE PRODUCT</a></td>\n");
      out.write("             </tr>\n");
      out.write("            \n");
      out.write("            <tr>\n");
      out.write("            \n");
      out.write("             <tr>\n");
      out.write("                <td class=\"formeles\"><a href=\"userInvoicePage.jsp\">GENERATE INVOICE</a></td>\n");
      out.write("             </tr>\n");
      out.write("            \n");
      out.write("            <tr>\n");
      out.write("                <td class=\"formeles\"><a href=\"PaymentPage.jsp\">CLIENT PAYMENT DUES</td>\n");
      out.write("            </tr>\n");
      out.write("            <tr>\n");
      out.write("                <td class=\"formeles\"><a href=\"ManageClientPage.jsp\">MANAGE CLIENTS </a></td>\n");
      out.write("            </tr>\n");
      out.write("            \n");
      out.write("             <tr>\n");
      out.write("                <td class=\"formeles\"><a href=\"ViewFeedbackPage.jsp\">VIEW FEEDBACK</a></td>\n");
      out.write("            </tr>\n");
      out.write("             <tr>\n");
      out.write("                <td class=\"formeles\"><a href=\"ViewComplaintPage.jsp\">VIEW COMPLAIN</a></td>\n");
      out.write("            </tr>\n");
      out.write("          </table>    \n");
      out.write("        </form>\n");
      out.write("       </div>\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
